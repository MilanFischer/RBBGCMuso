% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotMuso.R
\name{plotMuso}
\alias{plotMuso}
\title{plot the Biome-BGCMuSo output}
\usage{
plotMuso(settings, variable,
timee="d", silent=TRUE,
debugging=FALSE, keepEpc=FALSE,
logfilename=NULL, aggressive=FALSE,
leapYear=FALSE, export=FALSE)
}
\arguments{
\item{settings}{RBBGCMuso uses variables that define the entire simulation environment. Those environment variables include the name of the INI files, the name of the meteorology files, the path to the model executable and its file name, the entire output list, the entire output variable matrix, the dependency rules for the EPC parameters etc. Using the runMuso function RBBGCMuso can automatically create those environment variables by inspecting the files in the working directory (this happens through the setupMuso function). It means that by default model setup is performed automatically in the background and the user has nothing to do. With this settings parameter we can force runMuso to skip automatic environment setup as we provide the environment settings to runMuso. In a typical situation the user can skip this option.}

\item{variable}{Column number of the output variable which should be plotted, or "all" if you have less than 10 variables. In this case the function will plot everything in a matrix layout.}

\item{timee}{The required timesteps in the model output. It can be "d", if it is daily, "m", if it is monthly, "y" if it is yearly. It is recommended to use daily data, as the yearly and monthly data is not well-tested yet.}

\item{silent}{If you set the silent parameter to TRUE, all of the model's output normally written to the screen will be suppressed. This option can be useful to increase the speed of the model execution.}

\item{debugging}{If debugging is set to TRUE, after model execution the function copies the Biome-BGCMuSo log file into a LOG directory and stores it for further processing. If debugging is set to STAMPLOG instead of TRUE, it concatenates a number before the logfile, which is one plus the maximum of those present in the LOG directory. In each case the log files will be saved.}

\item{keepEpc}{If keepEpc is set to TRUE, the function keeps the EPC file and stamps it, and then copies it to the EPCS directory. If debugging is set to TRUE, it copies the wrong EPC files to the wrong epc directory.}

\item{logfilename}{If you would like to set a specific name for your logfiles you can set this via the logfile parameter.}

\item{aggressive}{It deletes all previous model-outputs from previous model runs.}

\item{leapYear}{Should the function do a leapyear correction on the output data? If TRUE, then the result for 31 December will be doubled in leap years which means that the results for the leap year will cover all 366 days. See the model's User's Guide for notes on leap years.}

\item{plotType}{There are two options implemented by now: continuous time series ("cts") or disctrete time series ("dts")}

\item{skipSpinup}{If TRUE, the function won't perform the spinup simulation. In this case the endpoint file must exist that provides initial conditions for the run.}

\item{export}{If it is set to YES or you define a filename here, the function converts the output to the specific file format. For example, if you set export to "example.csv", it converts the output to "csv". If you set it to "example.xls" it converts the output to example.xls with the xlsx package. If the Excel converter package is not installed it gives back a warning message and converts the results to csv.}
}
\value{
It depends on the export parameter. The function returns with a matrix with the model output, or writes this into a file, which is defined previously
}
\description{
This function runs the Biome-BGCMuSo model and reads its output file in a well structured way, and after that it plots the results automatically. plotMuso is a convenient and quick method to create nice graphs from Biome-BGCMuSo output which is quite painful in other environments.
}
\author{
Roland HOLLOS, Dora HIDY
}
